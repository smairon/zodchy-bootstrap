import specs
import typing

from .. import contracts
from . import generic


async def create(
    request: contracts.Request,
    payload: contracts.schema.items.CreateItemRequest
):
    stream = await generic.execute_command(
        message=specs.messages.CreateItem(
            name=payload.name
        ),
        request=request
    )
    return generic.format_response(stream)


async def update(
    request: contracts.Request,
    item_id: specs.types.IdentifierType,
    payload: contracts.schema.items.UpdateItemRequest
):
    stream = await generic.execute_command(
        specs.messages.UpdateItem(
            id=item_id,
            **payload.model_dump(exclude_unset=True)
        ),
        request=request
    )
    return generic.format_response(stream)


async def roster(
    request: contracts.Request,
    payload: typing.Annotated[contracts.schema.items.ItemListRequest, contracts.Embedded()],
):
    stream = await generic.execute_command(
        message=payload(specs.messages.GetItems),
        request=request
    )
    return generic.format_response(stream)


async def item(
    request: contracts.Request,
    item_id: specs.types.IdentifierType
):
    stream = await generic.execute_command(
        message=specs.messages.GetItem(id=item_id),
        request=request
    )
    return generic.format_response(stream)
