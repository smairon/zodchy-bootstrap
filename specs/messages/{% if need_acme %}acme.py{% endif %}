import dataclasses
import datetime

from zodchy import codex
from zodchy_patterns import events

from .. import types


@dataclasses.dataclass
class CreateSomething(codex.cqea.Command):
    name: str


@dataclasses.dataclass
class UpdateSomething(codex.cqea.Command):
    id: types.IdentifierType
    name: str | types.NoValueType = types.NoValueType
    state: types.AcmeState | types.NoValueType = types.NoValueType


@dataclasses.dataclass
class SomethingCreated(codex.cqea.BDEvent):
    id: types.IdentifierType
    name: str


@dataclasses.dataclass
class SomethingLinkedWithExternalService(events.HttpInfo):
    id: types.IdentifierType
    name: str
    external_id: types.IdentifierType


@dataclasses.dataclass
class SomeItemReceived(events.HttpItemInfo):
    pass


@dataclasses.dataclass
class LinkingSomethingFailed(events.HttpError):
    pass


@dataclasses.dataclass
class GetListOfSomething(codex.cqea.Query):
    id: codex.query.ClauseBit[types.IdentifierType] | None = None
    name: codex.query.ClauseBit[str] | None = None
    state: codex.query.ClauseBit[types.AcmeState] | None = None
    created_at: codex.query.ClauseBit[datetime.datetime] | None = None
    limit: codex.query.Limit | None = None


@dataclasses.dataclass
class GetSomething(codex.cqea.Query):
    id: types.IdentifierType
